1. In 'base/urls.py' modificam:

"""base URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/4.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include
from api.models import CourseResource, CategoryResource
from tastypie.api import Api


api = Api(api_name='v1')
course_resource = CourseResource()
category_resource = CategoryResource()
api.register(course_resource) # am inregistarat resurele
api.register(category_resource)

# dupa inregistrarea resurselor adresele vor fi urmattoarele
# api/v1/course
# api/v1/categories

urlpatterns = [
    path('admin/', admin.site.urls),
    path('shop/', include('shop.urls')),  # includem toate marshuturile descrise din 'shop\urls.py'
    # toate vor fi accesible pe adresa 'shop/'
    # Aici putem sa zicem am concetat toate marshuturile din aplicatiea 'shop'
    path('api/', include(api.urls)),

]


2. http://127.0.0.1:8000/api/v1/

obtzinem lista de resurse:
rezultat:

{
"categories": {
"list_endpoint": "/api/v1/categories/",
"schema": "/api/v1/categories/schema/"
},
"courses": {
"list_endpoint": "/api/v1/courses/",
"schema": "/api/v1/courses/schema/"
}
}